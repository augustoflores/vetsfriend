{"version":3,"file":"static/webpack/static/development/pages/index.js.40434292d3f05f2d7351.hot-update.js","sources":["webpack:///./components/layout.js"],"sourcesContent":["import React from 'react'\nimport Router from 'next/router'\nimport Head from 'next/head'\nimport Link from 'next/link'\nimport { Container, Row, Col, Nav, NavItem, Button, Form, NavLink, Collapse,\n         Navbar, NavbarToggler, NavbarBrand, Modal, ModalHeader, ModalBody,\n         ModalFooter, ListGroup, ListGroupItem } from 'reactstrap'\nimport Signin from './signin'\nimport { NextAuth } from 'next-auth/client'\nimport Cookies from 'universal-cookie'\nimport Package from '../package'\nimport Styles from '../css/index.scss'\n\nexport default class extends React.Component {\n\n  static propTypes() {\n    return {\n      session: React.PropTypes.object.isRequired,\n      providers: React.PropTypes.object.isRequired,\n      children: React.PropTypes.object.isRequired,\n      fluid: React.PropTypes.boolean,\n      navmenu: React.PropTypes.boolean,\n      signinBtn: React.PropTypes.boolean\n    }\n  }\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      navOpen: false,\n      modal: false,\n      providers: null\n    }\n    this.toggleModal = this.toggleModal.bind(this)\n  }\n  \n  async toggleModal(e) {\n    if (e) e.preventDefault()\n\n    // Save current URL so user is redirected back here after signing in\n    if (this.state.modal !== true) {\n      const cookies = new Cookies()\n      cookies.set('redirect_url', window.location.pathname, { path: '/' })\n    }\n\n    this.setState({\n      providers: this.state.providers || await NextAuth.providers(),\n      modal: !this.state.modal\n    })\n  }\n  \n  render() {\n    return (\n      <React.Fragment>\n        <Head>\n          <meta charSet=\"UTF-8\" />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n          <title>{this.props.title || 'Next.js Starter Project'}</title>\n          <style dangerouslySetInnerHTML={{__html: Styles}}/>\n        </Head>\n        <MainBody navmenu={this.props.navmenu} fluid={this.props.fluid} container={this.props.container}>\n          {this.props.children}\n        </MainBody>\n      </React.Fragment>\n    )\n  }\n}\n\nexport class MainBody extends React.Component {\n  render() {\n    if (this.props.container === false) {\n      return (\n        <React.Fragment>\n          {this.props.children}\n        </React.Fragment>\n      )\n    } else if (this.props.navmenu === false) {\n      return (\n        <Container fluid={this.props.fluid} style={{marginTop: '1em'}}>\n          {this.props.children}\n        </Container>\n      )\n    } else {\n      return (\n        <Container fluid={this.props.fluid} style={{marginTop: '1em'}}>\n          <Row>\n            <Col xs=\"12\" md=\"9\" lg=\"10\">\n              {this.props.children}\n            </Col>\n            <Col xs=\"12\" md=\"3\" lg=\"2\" style={{paddingTop: '1em'}}>\n              <h5 className=\"text-muted text-uppercase\">Examples</h5>\n              <ListGroup>\n                <ListGroupItem>\n                  <Link prefetch href=\"/examples/authentication\"><a href=\"/examples/authentication\" className=\"d-block\">Auth</a></Link>\n                </ListGroupItem>\n                <ListGroupItem>\n                    <Link prefetch href=\"/examples/async\"><a href=\"/examples/async\" className=\"d-block\">Async</a></Link>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <Link prefetch href=\"/examples/layout\"><a href=\"/examples/layout\" className=\"d-block\">Layout</a></Link>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <Link prefetch href=\"/examples/routing\"><a href=\"/examples/routing\" className=\"d-block\">Routing</a></Link>\n                </ListGroupItem>\n                <ListGroupItem>\n                    <Link prefetch href=\"/examples/styling\"><a href=\"/examples/styling\" className=\"d-block\">Styling</a></Link>\n                </ListGroupItem>\n              </ListGroup>\n            </Col>\n          </Row>\n        </Container>\n      )\n    }\n  }\n}\n\nexport class UserMenu extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleSignoutSubmit = this.handleSignoutSubmit.bind(this)\n  }\n\n   async handleSignoutSubmit(event) {\n     event.preventDefault()\n     \n     // Save current URL so user is redirected back here after signing out\n     const cookies = new Cookies()\n     cookies.set('redirect_url', window.location.pathname, { path: '/' })\n\n     await NextAuth.signout()\n     Router.push('/')\n   }\n   \n  render() {\n    if (this.props.session && this.props.session.user) {\n      // If signed in display user dropdown menu\n      const session = this.props.session\n      return (\n        <Nav className=\"ml-auto\" navbar>\n          {/*<!-- Uses .nojs-dropdown CSS to for a dropdown that works without client side JavaScript ->*/}\n          <div tabIndex=\"2\" className=\"dropdown nojs-dropdown\">\n            <div className=\"nav-item\">\n              <span className=\"dropdown-toggle nav-link d-none d-md-block\">\n                <span className=\"icon ion-md-contact\" style={{fontSize: '2em', position: 'absolute', top: -5, left: -25}}></span>\n              </span>\n              <span className=\"dropdown-toggle nav-link d-block d-md-none\">\n                <span className=\"icon ion-md-contact mr-2\"></span>\n                {session.user.name || session.user.email}\n              </span>\n            </div>\n            <div className=\"dropdown-menu\">\n              <Link prefetch href=\"/account\">\n                <a href=\"/account\" className=\"dropdown-item\"><span className=\"icon ion-md-person mr-1\"></span> Your Account</a>\n              </Link>\n              <AdminMenuItem {...this.props}/>\n              <div className=\"dropdown-divider d-none d-md-block\"/>\n              <div className=\"dropdown-item p-0\">\n                <Form id=\"signout\" method=\"post\" action=\"/auth/signout\" onSubmit={this.handleSignoutSubmit}>\n                  <input name=\"_csrf\" type=\"hidden\" value={this.props.session.csrfToken}/>\n                  <Button type=\"submit\" block className=\"pl-4 rounded-0 text-left dropdown-item\"><span className=\"icon ion-md-log-out mr-1\"></span> Sign out</Button>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </Nav>\n      )\n     } if (this.props.signinBtn === false) {\n       // If not signed in, don't display sign in button if disabled\n      return null\n    } else {\n      // If not signed in, display sign in button\n      return (\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            {/**\n              * @TODO Add support for passing current URL path as redirect URL\n              * so that users without JavaScript are also redirected to the page\n              * they were on before they signed in.\n              **/}\n            <a href=\"/auth?redirect=/\" className=\"btn btn-outline-primary\" onClick={this.props.toggleModal}><span className=\"icon ion-md-log-in mr-1\"></span> Sign up / Sign in</a>\n          </NavItem>\n        </Nav>\n      )\n    }\n  }\n}\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAPA;AAQA;AACA;;;;;;AACA;;;;;;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AADA;AACA;;;;;;AAAA;;AADA;AACA;;;AAFA;AACA;;;;;;;;;;;;;;;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AApDA;AACA;;AAsgDA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAEA;AACA;AAAA;AAAA;AAXA;AAAA;AACA;AADA;AAcA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkpEA;AACA;AADA;AAAA;;;;A","sourceRoot":""}